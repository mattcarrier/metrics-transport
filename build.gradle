buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.8.0"
  }
}

plugins {
  id "com.github.hierynomus.license" version "0.13.1"
}

apply plugin: 'io.codearte.nexus-staging'

nexusStaging {
  packageGroup = "io.github.mattcarrier"
  username = ossrhUsername
  password = ossrhPassword
}

ext {
  guavaVersion = '21.0'
  metricsVersion = '3.2.2'
  junitVersion = '4.12'
  slf4jVersion = '1.7.22'
  equalsVerifierVersion = '2.2.1'
  kryoVersion = '4.0.0'
  kryoSerializersVersion = '0.41'
  rabbitmqVersion = '4.1.0'
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'license'

  repositories {
    mavenCentral()
  }

  license {
    header rootProject.file('LICENSE')
    strictCheck true

    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Matt Carrier'
  }

  dependencies {
    compile "com.google.guava:guava:${guavaVersion}"
    compile "io.dropwizard.metrics:metrics-core:${metricsVersion}"

    testCompile "junit:junit:${junitVersion}"
    testRuntime "org.slf4j:slf4j-simple:${slf4jVersion}"
  }
}

project('metrics-serialization-core') {
  dependencies {
    testCompile "nl.jqno.equalsverifier:equalsverifier:${equalsVerifierVersion}"
  }
}

project('metrics-serialization-serializer-tests') {
  dependencies {
    compile "junit:junit:${junitVersion}"
    compile project(':metrics-serialization-core')
  }
}

project(':metrics-serialization-kryo') {
  dependencies {
    compile "com.esotericsoftware:kryo:${kryoVersion}"
    compile "de.javakaffee:kryo-serializers:${kryoSerializersVersion}"
    compile project(':metrics-serialization-core')

    testCompile project(':metrics-serialization-serializer-tests')
  }
}

project(':metrics-rabbit') {
  dependencies {
    compile "com.rabbitmq:amqp-client:${rabbitmqVersion}"
    compile project(':metrics-serialization-core')
  }

  test {
    if (project.hasProperty('rabbitHost')) {
      systemProperty 'RABBIT_HOST', rabbitHost
    }
  }
}

if (project.getProperty("signing.keyId")) {
  apply from: 'maven.gradle'
}
